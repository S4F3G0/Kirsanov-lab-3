"use strict";
class Person {
    constructor(name, age) {
        this.name = name !== null && name !== void 0 ? name : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        this.age = age !== null && age !== void 0 ? age : 0;
    }
    // –ì–µ—Ç—Ç–µ—Ä—ã
    getName() {
        return this.name;
    }
    getAge() {
        return this.age;
    }
    // –°–µ—Ç—Ç–µ—Ä—ã
    setName(name) {
        this.name = name;
    }
    setAge(age) {
        this.age = age;
    }
    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    display() {
        console.log(`–ò–º—è: ${this.name}, –í–æ–∑—Ä–∞—Å—Ç: ${this.age}`);
    }
}
// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞
const person1 = new Person("–ê–ª–∏—Å–∞", 22);
const person2 = new Person();
person2.setName("–ë–æ–±");
person2.setAge(30);
// –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
person1.display();
person2.display();
class Octagon {
    constructor(innerRadius) {
        this.innerRadius = innerRadius;
    }
    setInnerRadius(value) {
        this.innerRadius = value;
    }
    getInnerRadius() {
        return this.innerRadius;
    }
    calculateArea() {
        // –ü–ª–æ—â–∞–¥—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–æ—Å—å–º–∏—É–≥–æ–ª—å–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ —Ä–∞–¥–∏—É—Å –≤–ø–∏—Å–∞–Ω–Ω–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏:
        // A = 2 * r^2 * (1 + ‚àö2)
        return 2 * this.innerRadius ** 2 * (1 + Math.SQRT2);
    }
    calculatePerimeter() {
        // –°—Ç–æ—Ä–æ–Ω–∞ s = r * ‚àö(2 - ‚àö2)
        // –ü–µ—Ä–∏–º–µ—Ç—Ä = 8 * s
        const side = this.innerRadius * Math.sqrt(2 - Math.sqrt(2));
        return 8 * side;
    }
    display() {
        console.log(`–í–ø–∏—Å–∞–Ω–Ω—ã–π —Ä–∞–¥–∏—É—Å: ${this.innerRadius}`);
        console.log(`–ü–ª–æ—â–∞–¥—å: ${this.calculateArea().toFixed(2)}`);
        console.log(`–ü–µ—Ä–∏–º–µ—Ç—Ä: ${this.calculatePerimeter().toFixed(2)}`);
    }
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const oct = new Octagon(10);
oct.display();
class Student {
    constructor(name, birthDate, group, studentId, averageScore) {
        this.name = name;
        this.birthDate = birthDate;
        this.group = group;
        this.studentId = studentId;
        this.averageScore = averageScore;
    }
    getName() {
        return this.name;
    }
    setName(name) {
        this.name = name;
    }
    getBirthDate() {
        return this.birthDate;
    }
    setBirthDate(birthDate) {
        this.birthDate = birthDate;
    }
    getGroup() {
        return this.group;
    }
    setGroup(group) {
        this.group = group;
    }
    getStudentId() {
        return this.studentId;
    }
    setStudentId(id) {
        this.studentId = id;
    }
    getAverageScore() {
        return this.averageScore;
    }
    setAverageScore(score) {
        this.averageScore = score;
    }
    getAge() {
        const now = new Date();
        const age = now.getFullYear() - this.birthDate.getFullYear();
        const monthDiff = now.getMonth() - this.birthDate.getMonth();
        const dayDiff = now.getDate() - this.birthDate.getDate();
        return monthDiff < 0 || (monthDiff === 0 && dayDiff < 0) ? age - 1 : age;
    }
    isExcellentStudent() {
        return this.averageScore >= 4.8;
    }
    toString() {
        return `–°—Ç—É–¥–µ–Ω—Ç: ${this.name}, –í–æ–∑—Ä–∞—Å—Ç: ${this.getAge()} –ª–µ—Ç, –ì—Ä—É–ø–ø–∞: ${this.group}, ID: ${this.studentId}, –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: ${this.averageScore.toFixed(2)} (${this.isExcellentStudent() ? "–û—Ç–ª–∏—á–Ω–∏–∫" : "–û–±—ã—á–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç"})`;
    }
}
// üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const student1 = new Student("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", new Date(2004, 2, 15), "–ü–†–û–ì-101", 12345, 4.9);
const student2 = new Student("–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞", new Date(2005, 10, 5), "–ü–†–û–ì-102", 23456, 4.5);
console.log(student1.toString());
console.log(student2.toString());
class BankAccount {
    constructor(accountNumber, initialBalance = 0) {
        this.accountNumber = accountNumber;
        this.balance = initialBalance;
    }
    deposit(amount) {
        if (amount > 0) {
            this.balance += amount;
            console.log(`‚úÖ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: +${amount}. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${this.balance}`);
        }
        else {
            console.log("‚ùå –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.");
        }
    }
    withdraw(amount) {
        if (amount <= this.balance && amount > 0) {
            this.balance -= amount;
            console.log(`‚úÖ –°–Ω—è—Ç–∏–µ: -${amount}. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${this.balance}`);
        }
        else {
            console.log("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.");
        }
    }
    getBalance() {
        return this.balance;
    }
}
// üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const account = new BankAccount("RU-0011223344", 1000);
account.deposit(500);
account.withdraw(300);
account.withdraw(1500); // –æ—à–∏–±–∫–∞
console.log("üîé –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:", account.getBalance());
class Author {
    constructor(name, birthYear) {
        this.name = name;
        this.birthYear = birthYear;
    }
    getName() {
        return this.name;
    }
    getBirthYear() {
        return this.birthYear;
    }
    toString() {
        return `${this.name} (—Ä–æ–¥. ${this.birthYear})`;
    }
}
class Book {
    constructor(title, author) {
        this.title = title;
        this.author = author;
    }
    getAuthorInfo() {
        return this.author.toString();
    }
    setAuthor(author) {
        this.author = author;
    }
    getTitle() {
        return this.title;
    }
    displayBookInfo() {
        return `–ö–Ω–∏–≥–∞: "${this.title}", –ê–≤—Ç–æ—Ä: ${this.getAuthorInfo()}`;
    }
}
// üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const author = new Author("–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π", 1828);
const book = new Book("–í–æ–π–Ω–∞ –∏ –º–∏—Ä", author);
console.log(book.displayBookInfo());
class Engine {
    constructor(power) {
        this.power = power;
    }
    getPower() {
        return this.power;
    }
    toString() {
        return `${this.power} –ª.—Å.`;
    }
}
class Passenger {
    constructor(name) {
        this.name = name;
    }
    getName() {
        return this.name;
    }
}
class Car {
    constructor(model, engine) {
        this.passengers = [null, null];
        this.model = model;
        this.engine = engine;
    }
    addPassenger(passenger) {
        for (let i = 0; i < this.passengers.length; i++) {
            if (this.passengers[i] === null) {
                this.passengers[i] = passenger;
                return `‚úÖ –ü–∞—Å—Å–∞–∂–∏—Ä ${passenger.getName()} –¥–æ–±–∞–≤–ª–µ–Ω.`;
            }
        }
        return "‚ùå –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç!";
    }
    removePassenger(passenger) {
        var _a;
        for (let i = 0; i < this.passengers.length; i++) {
            if (((_a = this.passengers[i]) === null || _a === void 0 ? void 0 : _a.getName()) === passenger.getName()) {
                this.passengers[i] = null;
                return `üßæ –ü–∞—Å—Å–∞–∂–∏—Ä ${passenger.getName()} —É–¥–∞–ª—ë–Ω.`;
            }
        }
        return `‚ùå –ü–∞—Å—Å–∞–∂–∏—Ä ${passenger.getName()} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
    }
    displayInfo() {
        console.log(`üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${this.model}`);
        console.log(`üõ†Ô∏è –î–≤–∏–≥–∞—Ç–µ–ª—å: ${this.engine.toString()}`);
        console.log(`üë• –ü–∞—Å—Å–∞–∂–∏—Ä—ã:`);
        this.passengers.forEach((p, index) => {
            console.log(`   –ú–µ—Å—Ç–æ ${index + 1}: ${p ? p.getName() : "–ø—É—Å—Ç–æ"}`);
        });
    }
}
// üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const engine = new Engine(150);
const car = new Car("Toyota Camry", engine);
const passenger1 = new Passenger("–ò–≤–∞–Ω");
const passenger2 = new Passenger("–ú–∞—Ä–∏—è");
const passenger3 = new Passenger("–ü–µ—Ç—Ä");
console.log(car.addPassenger(passenger1));
console.log(car.addPassenger(passenger2));
console.log(car.addPassenger(passenger3)); // –º–µ—Å—Ç–∞ –Ω–µ—Ç
car.displayInfo();
console.log(car.removePassenger(passenger1));
car.displayInfo();
